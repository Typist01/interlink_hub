// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  name       String?
  password   String
  email      String?      @unique
  picture    String?
  isGuest    Boolean      @default(false)
  created    DateTime     @default(now())
  updated    DateTime?    @updatedAt
  Hypothesis Hypothesis[]
  Finding    Finding[]
  Response   Response[]
}

model Hypothesis {
  id          String    @id @default(uuid())
  userId      String
  title       String
  description String
  created     DateTime  @default(now())
  updated     DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  findings    Finding[]
}

model Finding {
  id                 String     @id @default(uuid())
  userId             String
  hypothesisId       String
  description        String
  created            DateTime   @default(now())
  updated            DateTime   @updatedAt
  user               User       @relation(fields: [userId], references: [id])
  hypothesis         Hypothesis @relation(fields: [hypothesisId], references: [id])
  externalHypothesis Boolean?
}

model Response {
  id       String   @id @default(uuid())
  content  String
  created  DateTime @default(now())
  updated  DateTime @updatedAt
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  postId   String // Generic ID that can reference either Hypothesis or Finding
  postType String // Type of the post (e.g., 'Hypothesis' or 'Finding')
  votes    Int
  userVote Int
  // Polymorphic relation not directly supported by Prisma, handle in application logic
}
